{"ast":null,"code":"import { createAsyncThunk, createSlice, createAction } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport { baseUrl } from \"../../../utils/baseurl\"; //reset/\n//const resetPost=createAction(\"category/reset\");\n//create post action \n\nexport const createPostAction = createAsyncThunk('post/created', async (post, _ref) => {\n  var _getState;\n\n  let {\n    rejectWithValue,\n    getState,\n    dispatch\n  } = _ref;\n  // const details=localStorage.getItem('userInfo');\n  //getuser token to be able to create post\n  const user = (_getState = getState()) === null || _getState === void 0 ? void 0 : _getState.users;\n  post.user = user.userAuth._id;\n  console.log(user);\n  const {\n    userAuth\n  } = user;\n  console.log(userAuth === null || userAuth === void 0 ? void 0 : userAuth.token); // got token in console. now pass it as header\n\n  const config = {\n    headers: {\n      Authorization: `Bearer ${userAuth === null || userAuth === void 0 ? void 0 : userAuth.token}`\n    }\n  };\n\n  try {\n    //const formData= new FormData();\n    //formData.append(\"title\",post?.title);\n    //formData.append(\"description\", post?.description);\n    //formData.append(\"category\", post?.category);\n    //formData.append(\"image\", post?.image);\n    //passss formData instead of post\n    console.log(post); //http call\n\n    const {\n      data\n    } = await axios.post(`${baseUrl}/api/posts`, post, config); //dispatch action, config\n    // dispatch(resetPost);\n\n    return data;\n  } catch (error) {\n    var _error$resposne;\n\n    if (!(error !== null && error !== void 0 && error.resposne)) throw error;\n    return rejectWithValue(error === null || error === void 0 ? void 0 : (_error$resposne = error.resposne) === null || _error$resposne === void 0 ? void 0 : _error$resposne.message);\n  }\n}); //================================================================================\n//fetchPosts\n\nexport const fetchPostsAction = createAsyncThunk('post/list', async (category, _ref2) => {\n  let {\n    rejectWithValue,\n    getState,\n    dispatch\n  } = _ref2;\n\n  // no authentication req, anyone can fetch posts\n  try {\n    //console.log(post);\n    //http call\n    const {\n      data\n    } = await axios.get(`${baseUrl}/api/posts?category=${category}`); //dispatch action, config\n    // dispatch(resetPost);\n\n    return data;\n  } catch (error) {\n    var _error$resposne2;\n\n    if (!(error !== null && error !== void 0 && error.resposne)) throw error;\n    return rejectWithValue(error === null || error === void 0 ? void 0 : (_error$resposne2 = error.resposne) === null || _error$resposne2 === void 0 ? void 0 : _error$resposne2.message);\n  }\n}); //-============================================================\n//Add likes to post \n\nexport const toggleAddLikesToPost = createAsyncThunk('post/like', async (postId, _ref3) => {\n  var _getState2;\n\n  let {\n    rejectWithValue,\n    getState,\n    dispatch\n  } = _ref3;\n  //getuser token to be able to like post\n  const user = (_getState2 = getState()) === null || _getState2 === void 0 ? void 0 : _getState2.users; //post.user=user.userAuth._id;\n  // console.log(user)\n\n  const {\n    userAuth\n  } = user;\n  console.log(userAuth === null || userAuth === void 0 ? void 0 : userAuth.token); // got token in console. now pass it as header\n\n  const config = {\n    headers: {\n      Authorization: `Bearer ${userAuth === null || userAuth === void 0 ? void 0 : userAuth.token}`\n    }\n  };\n\n  try {\n    const {\n      data\n    } = await axios.put(`${baseUrl}/api/posts/likes/}`, postId, config);\n    return data;\n  } catch (error) {\n    var _error$resposne3;\n\n    if (!(error !== null && error !== void 0 && error.resposne)) {\n      throw error;\n    }\n\n    return rejectWithValue(error === null || error === void 0 ? void 0 : (_error$resposne3 = error.resposne) === null || _error$resposne3 === void 0 ? void 0 : _error$resposne3.data);\n  }\n}); //==================================================================================\n//slice\n\nconst postSlice = createSlice({\n  name: 'post',\n  initialState: {},\n  extraReducers: builder => {\n    //create post\n    builder.addCase(createPostAction.pending, (state, action) => {\n      state.loading = true;\n    }); //builder.addCase(resetPost,(state,action)=>{\n    //    state.isCreated=true;\n    //});\n\n    builder.addCase(createPostAction.fulfilled, (state, action) => {\n      state.loading = false;\n      state.postCreated = action === null || action === void 0 ? void 0 : action.payload; //  state.isCreated=false;\n\n      state.appErr = undefined;\n      state.serverErr = undefined;\n    });\n    builder.addCase(createPostAction.rejected, (state, action) => {\n      var _action$payload, _action$error;\n\n      state.loading = false;\n      state.appErr = action === null || action === void 0 ? void 0 : (_action$payload = action.payload) === null || _action$payload === void 0 ? void 0 : _action$payload.message;\n      state.serverErr = action === null || action === void 0 ? void 0 : (_action$error = action.error) === null || _action$error === void 0 ? void 0 : _action$error.message;\n    }); //fetch post \n\n    builder.addCase(fetchPostsAction.pending, (state, action) => {\n      state.loading = true;\n    });\n    builder.addCase(fetchPostsAction.fulfilled, (state, action) => {\n      state.loading = false;\n      state.postLists = action === null || action === void 0 ? void 0 : action.payload; //  state.isCreated=false;\n\n      state.appErr = undefined;\n      state.serverErr = undefined;\n    });\n    builder.addCase(fetchPostsAction.rejected, (state, action) => {\n      var _action$payload2, _action$error2;\n\n      state.loading = false;\n      state.appErr = action === null || action === void 0 ? void 0 : (_action$payload2 = action.payload) === null || _action$payload2 === void 0 ? void 0 : _action$payload2.message;\n      state.serverErr = action === null || action === void 0 ? void 0 : (_action$error2 = action.error) === null || _action$error2 === void 0 ? void 0 : _action$error2.message;\n    });\n  }\n});\nexport default postSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","createAction","axios","baseUrl","createPostAction","post","rejectWithValue","getState","dispatch","user","users","userAuth","_id","console","log","token","config","headers","Authorization","data","error","resposne","message","fetchPostsAction","category","get","toggleAddLikesToPost","postId","put","postSlice","name","initialState","extraReducers","builder","addCase","pending","state","action","loading","fulfilled","postCreated","payload","appErr","undefined","serverErr","rejected","postLists","reducer"],"sources":["C:/Users/Apoorva/Desktop/udemy/blog-frontend/src/redux/slices/posts/postSlices.js"],"sourcesContent":["import {createAsyncThunk, createSlice , createAction} from '@reduxjs/toolkit'\r\nimport axios from 'axios';\r\nimport { baseUrl } from \"../../../utils/baseurl\";\r\n\r\n\r\n//reset/\r\n//const resetPost=createAction(\"category/reset\");\r\n//create post action \r\nexport const createPostAction= createAsyncThunk('post/created',\r\n async (post, { rejectWithValue, getState, dispatch})=>{\r\n// const details=localStorage.getItem('userInfo');\r\n\r\n //getuser token to be able to create post\r\n const user=getState()?.users;\r\n post.user=user.userAuth._id;\r\n  console.log(user)\r\n const {userAuth}=user;\r\n  console.log(userAuth?.token); // got token in console. now pass it as header\r\n const config={\r\n   headers: {\r\n     Authorization:`Bearer ${userAuth?.token}`,\r\n   },\r\n };\r\n\r\n try{\r\n     //const formData= new FormData();\r\n     //formData.append(\"title\",post?.title);\r\n     //formData.append(\"description\", post?.description);\r\n     //formData.append(\"category\", post?.category);\r\n     //formData.append(\"image\", post?.image);\r\n     //passss formData instead of post\r\n     console.log(post);\r\n     //http call\r\n     const {data}= await axios.post(`${baseUrl}/api/posts`, post, config);\r\n     //dispatch action, config\r\n    // dispatch(resetPost);\r\n     return data;\r\n } catch(error){\r\n     if(!error?.resposne) throw error;\r\n    return rejectWithValue(error?.resposne?.message);\r\n } \r\n\r\n});\r\n//================================================================================\r\n//fetchPosts\r\nexport const fetchPostsAction= createAsyncThunk('post/list',\r\n async (category, { rejectWithValue, getState, dispatch})=>{\r\n// no authentication req, anyone can fetch posts\r\n try{\r\n     //console.log(post);\r\n     //http call\r\n     const {data}= await axios.get(`${baseUrl}/api/posts?category=${category}`);\r\n     //dispatch action, config\r\n    // dispatch(resetPost);\r\n     return data;\r\n } catch(error){\r\n     if(!error?.resposne) throw error;\r\n    return rejectWithValue(error?.resposne?.message);\r\n } \r\n\r\n});\r\n//-============================================================\r\n//Add likes to post \r\nexport const toggleAddLikesToPost = createAsyncThunk('post/like', async (postId,{ rejectWithValue, getState, dispatch}) => {\r\n     //getuser token to be able to like post\r\n const user=getState()?.users;\r\n //post.user=user.userAuth._id;\r\n // console.log(user)\r\n const {userAuth}=user;\r\n  console.log(userAuth?.token); // got token in console. now pass it as header\r\n const config={\r\n   headers: {\r\n     Authorization:`Bearer ${userAuth?.token}`,\r\n   },\r\n };\r\n try{\r\n     const {data} = await axios.put(`${baseUrl}/api/posts/likes/}`, postId,config);\r\n     return data;\r\n    }catch(error){\r\n        if(!error?.resposne){\r\n            throw error;\r\n        } return rejectWithValue(error?.resposne?.data);\r\n    }\r\n\r\n});\r\n\r\n\r\n//==================================================================================\r\n//slice\r\nconst postSlice= createSlice({\r\n    name:'post',\r\n    initialState:{},\r\n    extraReducers:builder=>{\r\n        //create post\r\nbuilder.addCase(createPostAction.pending, (state, action)=>{\r\n    state.loading=true;\r\n});\r\n//builder.addCase(resetPost,(state,action)=>{\r\n//    state.isCreated=true;\r\n//});\r\nbuilder.addCase(createPostAction.fulfilled, (state, action)=>{\r\n    state.loading=false;\r\n    state.postCreated=action?.payload;\r\n  //  state.isCreated=false;\r\n    state.appErr=undefined;\r\n    state.serverErr=undefined;\r\n});\r\nbuilder.addCase(createPostAction.rejected, (state, action)=>{\r\n    state.loading=false;\r\n    state.appErr=action?.payload?.message;\r\n    state.serverErr=action?.error?.message;\r\n});\r\n//fetch post \r\nbuilder.addCase(fetchPostsAction.pending, (state, action)=>{\r\n    state.loading=true;\r\n});\r\nbuilder.addCase(fetchPostsAction.fulfilled, (state, action)=>{\r\n    state.loading=false;\r\n    state.postLists=action?.payload;\r\n  //  state.isCreated=false;\r\n    state.appErr=undefined;\r\n    state.serverErr=undefined;\r\n});\r\nbuilder.addCase(fetchPostsAction.rejected, (state, action)=>{\r\n    state.loading=false;\r\n    state.appErr=action?.payload?.message;\r\n    state.serverErr=action?.error?.message;\r\n});\r\n    },\r\n});\r\n\r\nexport default postSlice.reducer;"],"mappings":"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"},"metadata":{},"sourceType":"module"}