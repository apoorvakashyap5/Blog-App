{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\"; //register action : \n//thunk created\n\nexport const registerUserAction = createAsyncThunk(\"users/register\", //action type\nasync (user, _ref) => {\n  let {\n    rejectWithValue,\n    getState,\n    dispatch\n  } = _ref;\n\n  //user is the payload\n  //rejectedwithValue-- helps us give exact error to the user\n  //getState---- gives us a snapshot of what is in our entire state\n  //dispatch-----helps dispatch another action inside this action\n  try {\n    //http call\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post( //api end-point\n    \"http://localhost:5000/api/users/register\", //payload:things we need to be able to register a user\n    user, //config\n    config);\n    return data;\n  } catch (error) {\n    var _error$response;\n\n    if (!(error !== null && error !== void 0 && error.response)) {\n      throw error;\n    }\n\n    return rejectWithValue(error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data);\n  }\n}); //reducers\n//createslices gives reducers and actionCreators both\n\nconst usersSlices = createSlice({\n  name: \"users\",\n  //reducer needs a state\n  initialState: {\n    userAuth: \"login\"\n  },\n  //object notation\n  extraReducers: builder => {\n    //register\n    builder.addCase(registerUserAction.pending, (state, action) => {\n      state.loading = true;\n    });\n    builder.addCase(registerUserAction.fulfilled, (state, action) => {\n      state.loading = false;\n      state.registered = action === null || action === void 0 ? void 0 : action.payload;\n      state.appErr = undefined; //since successful\n\n      state.serverErr = undefined;\n    });\n    builder.addCase(registerUserAction.rejected, (state, action) => {\n      var _action$payload, _action$error;\n\n      state.loading = false;\n      state.appErr = action === null || action === void 0 ? void 0 : (_action$payload = action.payload) === null || _action$payload === void 0 ? void 0 : _action$payload.message; //sice failed\n\n      state.serverErr = action === null || action === void 0 ? void 0 : (_action$error = action.error) === null || _action$error === void 0 ? void 0 : _action$error.message;\n    });\n  }\n});\nexport default usersSlices.reducer; //for createAsyncThunk any action you create it gives:\n//1. pending\n//2.fulfilled\n//3.rejected","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","registerUserAction","user","rejectWithValue","getState","dispatch","config","headers","data","post","error","response","usersSlices","name","initialState","userAuth","extraReducers","builder","addCase","pending","state","action","loading","fulfilled","registered","payload","appErr","undefined","serverErr","rejected","message","reducer"],"sources":["C:/Users/Apoorva/Desktop/udemy/blog-frontend/src/redux/slices/users/usersSlices.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\n//register action : \r\n//thunk created\r\nexport const registerUserAction = createAsyncThunk(\r\n  \"users/register\", //action type\r\n  async (user, { rejectWithValue, getState, dispatch }) => {\r\n    //user is the payload\r\n      //rejectedwithValue-- helps us give exact error to the user\r\n      //getState---- gives us a snapshot of what is in our entire state\r\n      //dispatch-----helps dispatch another action inside this action\r\n    try {\r\n      //http call\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      };\r\n      const { data } = await axios.post(\r\n          //api end-point\r\n        \"http://localhost:5000/api/users/register\",\r\n        //payload:things we need to be able to register a user\r\n        user,\r\n        //config\r\n        config\r\n      );\r\n      return data;\r\n    } catch (error) {\r\n      if (!error?.response) {\r\n        throw error;\r\n      }\r\n      return rejectWithValue(error?.response?.data);\r\n    }\r\n  }\r\n);\r\n\r\n\r\n//reducers\r\n//createslices gives reducers and actionCreators both\r\n\r\nconst usersSlices = createSlice({\r\n    name: \"users\",\r\n    //reducer needs a state\r\n    initialState: {\r\n      userAuth: \"login\",\r\n    },\r\n    //object notation\r\n    extraReducers: (builder) => {\r\n      //register\r\n    \r\n      builder.addCase(registerUserAction.pending, (state, action) => {\r\n        state.loading = true;\r\n      });\r\n      builder.addCase(registerUserAction.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.registered = action?.payload;\r\n        state.appErr = undefined; //since successful\r\n        state.serverErr = undefined;\r\n      });\r\n      builder.addCase(registerUserAction.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.appErr = action?.payload?.message; //sice failed\r\n        state.serverErr = action?.error?.message;\r\n      });\r\n    },\r\n  });\r\n  \r\n  export default usersSlices.reducer;\r\n  \r\n  //for createAsyncThunk any action you create it gives:\r\n  //1. pending\r\n  //2.fulfilled\r\n  //3.rejected\r\n"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;AACA;;AACA,OAAO,MAAMC,kBAAkB,GAAGH,gBAAgB,CAChD,gBADgD,EAC9B;AAClB,OAAOI,IAAP,WAAyD;EAAA,IAA5C;IAAEC,eAAF;IAAmBC,QAAnB;IAA6BC;EAA7B,CAA4C;;EACvD;EACE;EACA;EACA;EACF,IAAI;IACF;IACA,MAAMC,MAAM,GAAG;MACbC,OAAO,EAAE;QACP,gBAAgB;MADT;IADI,CAAf;IAKA,MAAM;MAAEC;IAAF,IAAW,MAAMR,KAAK,CAACS,IAAN,EACnB;IACF,0CAFqB,EAGrB;IACAP,IAJqB,EAKrB;IACAI,MANqB,CAAvB;IAQA,OAAOE,IAAP;EACD,CAhBD,CAgBE,OAAOE,KAAP,EAAc;IAAA;;IACd,IAAI,EAACA,KAAD,aAACA,KAAD,eAACA,KAAK,CAAEC,QAAR,CAAJ,EAAsB;MACpB,MAAMD,KAAN;IACD;;IACD,OAAOP,eAAe,CAACO,KAAD,aAACA,KAAD,0CAACA,KAAK,CAAEC,QAAR,oDAAC,gBAAiBH,IAAlB,CAAtB;EACD;AACF,CA7B+C,CAA3C,C,CAiCP;AACA;;AAEA,MAAMI,WAAW,GAAGb,WAAW,CAAC;EAC5Bc,IAAI,EAAE,OADsB;EAE5B;EACAC,YAAY,EAAE;IACZC,QAAQ,EAAE;EADE,CAHc;EAM5B;EACAC,aAAa,EAAGC,OAAD,IAAa;IAC1B;IAEAA,OAAO,CAACC,OAAR,CAAgBjB,kBAAkB,CAACkB,OAAnC,EAA4C,CAACC,KAAD,EAAQC,MAAR,KAAmB;MAC7DD,KAAK,CAACE,OAAN,GAAgB,IAAhB;IACD,CAFD;IAGAL,OAAO,CAACC,OAAR,CAAgBjB,kBAAkB,CAACsB,SAAnC,EAA8C,CAACH,KAAD,EAAQC,MAAR,KAAmB;MAC/DD,KAAK,CAACE,OAAN,GAAgB,KAAhB;MACAF,KAAK,CAACI,UAAN,GAAmBH,MAAnB,aAAmBA,MAAnB,uBAAmBA,MAAM,CAAEI,OAA3B;MACAL,KAAK,CAACM,MAAN,GAAeC,SAAf,CAH+D,CAGrC;;MAC1BP,KAAK,CAACQ,SAAN,GAAkBD,SAAlB;IACD,CALD;IAMAV,OAAO,CAACC,OAAR,CAAgBjB,kBAAkB,CAAC4B,QAAnC,EAA6C,CAACT,KAAD,EAAQC,MAAR,KAAmB;MAAA;;MAC9DD,KAAK,CAACE,OAAN,GAAgB,KAAhB;MACAF,KAAK,CAACM,MAAN,GAAeL,MAAf,aAAeA,MAAf,0CAAeA,MAAM,CAAEI,OAAvB,oDAAe,gBAAiBK,OAAhC,CAF8D,CAErB;;MACzCV,KAAK,CAACQ,SAAN,GAAkBP,MAAlB,aAAkBA,MAAlB,wCAAkBA,MAAM,CAAEX,KAA1B,kDAAkB,cAAeoB,OAAjC;IACD,CAJD;EAKD;AAxB2B,CAAD,CAA/B;AA2BE,eAAelB,WAAW,CAACmB,OAA3B,C,CAEA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}