[{"C:\\Users\\Apoorva\\Desktop\\udemy\\blog-frontend\\src\\index.js":"1","C:\\Users\\Apoorva\\Desktop\\udemy\\blog-frontend\\src\\App.js":"2","C:\\Users\\Apoorva\\Desktop\\udemy\\blog-frontend\\src\\components\\HomePage\\HomePage.js":"3","C:\\Users\\Apoorva\\Desktop\\udemy\\blog-frontend\\src\\components\\Users\\Register\\Register.js":"4","C:\\Users\\Apoorva\\Desktop\\udemy\\blog-frontend\\src\\redux\\store\\store.js":"5","C:\\Users\\Apoorva\\Desktop\\udemy\\blog-frontend\\src\\redux\\slices\\users\\usersSlices.js":"6","C:\\Users\\Apoorva\\Desktop\\udemy\\blog-frontend\\src\\components\\Users\\Login\\Login.js":"7","C:\\Users\\Apoorva\\Desktop\\udemy\\blog-frontend\\src\\utils\\baseurl.js":"8","C:\\Users\\Apoorva\\Desktop\\udemy\\blog-frontend\\src\\components\\Navigation\\Navbar.js":"9","C:\\Users\\Apoorva\\Desktop\\udemy\\blog-frontend\\src\\components\\Navigation\\Private\\PrivateNavbar.js":"10","C:\\Users\\Apoorva\\Desktop\\udemy\\blog-frontend\\src\\components\\Navigation\\Admin\\AdminNavbar.js":"11","C:\\Users\\Apoorva\\Desktop\\udemy\\blog-frontend\\src\\components\\Navigation\\Public\\PublicNavbar.js":"12","C:\\Users\\Apoorva\\Desktop\\udemy\\blog-frontend\\src\\components\\Categories\\AddNewCategory.js":"13","C:\\Users\\Apoorva\\Desktop\\udemy\\blog-frontend\\src\\redux\\slices\\category\\categorySlice.js":"14","C:\\Users\\Apoorva\\Desktop\\udemy\\blog-frontend\\src\\components\\Categories\\CategoryList.js":"15","C:\\Users\\Apoorva\\Desktop\\udemy\\blog-frontend\\src\\components\\Navigation\\ProtectedRoutes\\PrivateProtectedRoute.js":"16","C:\\Users\\Apoorva\\Desktop\\udemy\\blog-frontend\\src\\components\\Posts\\CreatePost.js":"17","C:\\Users\\Apoorva\\Desktop\\udemy\\blog-frontend\\src\\redux\\slices\\posts\\postSlices.js":"18","C:\\Users\\Apoorva\\Desktop\\udemy\\blog-frontend\\src\\components\\Categories\\CategoryDropDown.js":"19","C:\\Users\\Apoorva\\Desktop\\udemy\\blog-frontend\\src\\utils\\DateFormatter.js":"20","C:\\Users\\Apoorva\\Desktop\\udemy\\blog-frontend\\src\\components\\Posts\\PostsList.js":"21","C:\\Users\\Apoorva\\Desktop\\udemy\\blog-frontend\\src\\components\\Posts\\PostDetails.js":"22","C:\\Users\\Apoorva\\Desktop\\udemy\\blog-frontend\\src\\components\\Posts\\UpdatePost.js":"23","C:\\Users\\Apoorva\\Desktop\\udemy\\blog-frontend\\src\\components\\Comments\\AddComment.js":"24","C:\\Users\\Apoorva\\Desktop\\udemy\\blog-frontend\\src\\redux\\slices\\comments\\commentSlices.js":"25","C:\\Users\\Apoorva\\Desktop\\udemy\\blog-frontend\\src\\components\\Users\\Profile\\Profile.js":"26"},{"size":581,"mtime":1651748469170,"results":"27","hashOfConfig":"28"},{"size":1593,"mtime":1652282879872,"results":"29","hashOfConfig":"28"},{"size":1445,"mtime":1651699552307,"results":"30","hashOfConfig":"28"},{"size":15961,"mtime":1652210427956,"results":"31","hashOfConfig":"28"},{"size":448,"mtime":1652211649995,"results":"32","hashOfConfig":"28"},{"size":8449,"mtime":1652282870783,"results":"33","hashOfConfig":"28"},{"size":13366,"mtime":1652282873711,"results":"34","hashOfConfig":"28"},{"size":46,"mtime":1651777270248,"results":"35","hashOfConfig":"28"},{"size":528,"mtime":1651786135130,"results":"36","hashOfConfig":"28"},{"size":9664,"mtime":1652251495227,"results":"37","hashOfConfig":"28"},{"size":9827,"mtime":1652282827278,"results":"38","hashOfConfig":"28"},{"size":4282,"mtime":1651830058362,"results":"39","hashOfConfig":"28"},{"size":4486,"mtime":1652170350291,"results":"40","hashOfConfig":"28"},{"size":3149,"mtime":1651951315321,"results":"41","hashOfConfig":"28"},{"size":4707,"mtime":1652170346897,"results":"42","hashOfConfig":"28"},{"size":451,"mtime":1651825383818,"results":"43","hashOfConfig":"28"},{"size":5836,"mtime":1651906827227,"results":"44","hashOfConfig":"28"},{"size":9942,"mtime":1652184083485,"results":"45","hashOfConfig":"28"},{"size":744,"mtime":1651834608421,"results":"46","hashOfConfig":"28"},{"size":243,"mtime":1651949895751,"results":"47","hashOfConfig":"28"},{"size":8875,"mtime":1652282867425,"results":"48","hashOfConfig":"28"},{"size":4261,"mtime":1652170809238,"results":"49","hashOfConfig":"28"},{"size":5279,"mtime":1652184079028,"results":"50","hashOfConfig":"28"},{"size":1901,"mtime":1652170355987,"results":"51","hashOfConfig":"28"},{"size":1844,"mtime":1652169547986,"results":"52","hashOfConfig":"28"},{"size":10254,"mtime":1652282863803,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},"10oo6ur",{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"57"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"57"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Apoorva\\Desktop\\udemy\\blog-frontend\\src\\index.js",[],[],[],"C:\\Users\\Apoorva\\Desktop\\udemy\\blog-frontend\\src\\App.js",["140"],[],"import {BrowserRouter, Routes, Route} from 'react-router-dom';\nimport HomePage from './components/HomePage/HomePage';\nimport Register from './components/Users/Register/Register';\nimport Login from './components/Users/Login/Login';\nimport Navbar from './components/Navigation/Navbar'\nimport AddNewCategory from './components/Categories/AddNewCategory'\nimport CategoryList from './components/Categories/CategoryList'\nimport { PrivateProtectedRoute } from './components/Navigation/ProtectedRoutes/PrivateProtectedRoute';\nimport CreatePost from './components/Posts/CreatePost';\nimport PostsList from './components/Posts/PostsList';\nimport PostDetails from './components/Posts/PostDetails';\nimport UpdatePost from './components/Posts/UpdatePost';\nimport Profile from './components/Users/Profile/Profile';\n\n\nfunction App() {\n  return (\n   <BrowserRouter>\n   <Navbar/>\n   <Routes>\n     <Route exact path=\"/profile/:id\" element={<Profile/>}/>\n     <Route exact path='/create-post' element={<CreatePost/>}/>\n       <Route exact path='/add-category' element={<AddNewCategory/>}/>\n       <Route exact path='/category-list' element={<CategoryList/>}></Route>\n       <Route exact path='/' element={<HomePage/>}></Route>\n       <Route exact path='/register' element={<Register/>}></Route>\n       <Route exact path='/login' element={<Login/>}></Route>\n       <Route exact path='/posts' element={<PostsList/>}/>\n       <Route exact path='/posts/:id' element={<PostDetails/>}/>\n       <Route exact path='/update-post/:id' element={<UpdatePost/>}/>\n\n   </Routes>\n   </BrowserRouter>\n  );\n}\n\nexport default App;\n","C:\\Users\\Apoorva\\Desktop\\udemy\\blog-frontend\\src\\components\\HomePage\\HomePage.js",[],[],"C:\\Users\\Apoorva\\Desktop\\udemy\\blog-frontend\\src\\components\\Users\\Register\\Register.js",["141"],[],"C:\\Users\\Apoorva\\Desktop\\udemy\\blog-frontend\\src\\redux\\store\\store.js",[],[],[],"C:\\Users\\Apoorva\\Desktop\\udemy\\blog-frontend\\src\\redux\\slices\\users\\usersSlices.js",[],[],"C:\\Users\\Apoorva\\Desktop\\udemy\\blog-frontend\\src\\components\\Users\\Login\\Login.js",["142"],[],"C:\\Users\\Apoorva\\Desktop\\udemy\\blog-frontend\\src\\utils\\baseurl.js",[],[],"C:\\Users\\Apoorva\\Desktop\\udemy\\blog-frontend\\src\\components\\Navigation\\Navbar.js",[],[],"C:\\Users\\Apoorva\\Desktop\\udemy\\blog-frontend\\src\\components\\Navigation\\Private\\PrivateNavbar.js",["143"],[],"C:\\Users\\Apoorva\\Desktop\\udemy\\blog-frontend\\src\\components\\Navigation\\Admin\\AdminNavbar.js",["144"],[],"C:\\Users\\Apoorva\\Desktop\\udemy\\blog-frontend\\src\\components\\Navigation\\Public\\PublicNavbar.js",["145"],[],"import { Disclosure } from \"@headlessui/react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  MenuIcon,\r\n  XIcon,\r\n  LoginIcon,\r\n  BookOpenIcon,\r\n} from \"@heroicons/react/outline\";\r\nimport { PlusIcon } from \"@heroicons/react/solid\";\r\n\r\nconst navigation = [\r\n  { name: \"Home\", href: \"/\", current: true },\r\n // { name: \"Create\", href: \"/create-post\", current: false },\r\n  { name: \"Posts\", href: \"/posts\", current: false },\r\n  { name: \"Register\", href: \"/register\", current: false },\r\n  { name: \"Login\", href: \"/login\", current: false },\r\n];\r\n\r\nfunction classNames(...classes) {\r\n  return classes.filter(Boolean).join(\" \");\r\n}\r\n\r\nconst PublicNavbar = () => {\r\n  return (\r\n    <Disclosure as=\"nav\" className=\"bg-gray-800\">\r\n      {({ open }) => (\r\n        <>\r\n          <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n            <div className=\"flex justify-between h-16\">\r\n              <div className=\"flex\">\r\n                <div className=\"-ml-2 mr-2 flex items-center md:hidden\">\r\n                  {/* Mobile menu button */}\r\n                  <Disclosure.Button className=\"inline-flex items-center justify-center p-2 rounded-md text-gray-400 hover:text-white hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white\">\r\n                    <span className=\"sr-only\">Open main menu</span>\r\n                    {open ? (\r\n                      <XIcon className=\"block h-6 w-6\" aria-hidden=\"true\" />\r\n                    ) : (\r\n                      <MenuIcon className=\"block h-6 w-6\" aria-hidden=\"true\" />\r\n                    )}\r\n                  </Disclosure.Button>\r\n                </div>\r\n                <div className=\"flex-shrink-0 flex items-center\">\r\n                  {/* Logo */}\r\n                  <BookOpenIcon className=\"h-10 w-10 text-yellow-200\" />\r\n                </div>\r\n                <div className=\"hidden md:ml-6 md:flex md:items-center md:space-x-4\">\r\n                  {navigation.map(item => (\r\n                    <Link\r\n                      key={item.name}\r\n                      to={item.href}\r\n                      className={classNames(\r\n                        item.current\r\n                          ? \"bg-gray-900 text-white\"\r\n                          : \"text-gray-300 hover:bg-gray-700 hover:text-white\",\r\n                        \"px-3 py-2 rounded-md text-sm font-medium\"\r\n                      )}\r\n                      aria-current={item.current ? \"page\" : undefined}\r\n                    >\r\n                      {item.name}\r\n                    </Link>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n              <div className=\"flex items-center\">\r\n                <div className=\"flex-shrink-0\">\r\n                  <Link\r\n                    to=\"/login\"\r\n                    type=\"button\"\r\n                    className=\"relative inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-500 hover:bg-indigo-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-800 focus:ring-indigo-500\"\r\n                  >\r\n                    <LoginIcon\r\n                      className=\"-ml-1 mr-2 h-5 w-5\"\r\n                      aria-hidden=\"true\"\r\n                    />\r\n                    <span>Login</span>\r\n                  </Link>\r\n                </div>\r\n               \r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <Disclosure.Panel className=\"md:hidden\">\r\n            <div className=\"px-2 pt-2 pb-3 space-y-1 sm:px-3\">\r\n              {navigation.map(item => (\r\n                <a\r\n                  key={item.name}\r\n                  href={item.href}\r\n                  className={classNames(\r\n                    item.current\r\n                      ? \"bg-gray-900 text-white\"\r\n                      : \"text-gray-300 hover:bg-gray-700 hover:text-white\",\r\n                    \"block px-3 py-2 rounded-md text-base font-medium\"\r\n                  )}\r\n                  aria-current={item.current ? \"page\" : undefined}\r\n                >\r\n                  {item.name}\r\n                </a>\r\n              ))}\r\n            </div>\r\n          </Disclosure.Panel>\r\n        </>\r\n      )}\r\n    </Disclosure>\r\n  );\r\n};\r\n\r\nexport default PublicNavbar;\r\n","C:\\Users\\Apoorva\\Desktop\\udemy\\blog-frontend\\src\\components\\Categories\\AddNewCategory.js",["146"],[],"import { PlusCircleIcon, BookOpenIcon } from \"@heroicons/react/solid\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { createCategoryAction } from \"../../redux/slices/category/categorySlice\";\r\n\r\n//Form schema\r\nconst formSchema = Yup.object({\r\n  title: Yup.string().required(\"Title is required\"),\r\n});\r\n\r\nconst AddNewCategory = () => {\r\n  const dispatch = useDispatch();\r\n  //formik\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      title: \"\",\r\n    },\r\n    onSubmit: values => {\r\n      //dispath the action\r\n      dispatch(createCategoryAction(values));\r\n    },\r\n    validationSchema: formSchema,\r\n  });\r\n\r\n  //get data from store\r\n  const state = useSelector(state => state?.category);\r\n // console.log(state)\r\n\r\n  const { loading, appErr, serverErr, category } = state;\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\r\n      <div className=\"max-w-md w-full space-y-8\">\r\n        <div>\r\n          <BookOpenIcon className=\"mx-auto h-12 w-auto\" />\r\n          <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">\r\n            Add New Category\r\n          </h2>\r\n          <p className=\"mt-2 text-center text-sm text-gray-600\">\r\n            <p className=\"font-medium text-indigo-600 hover:text-indigo-500\">\r\n              These are the categories user will select when creating a post\r\n            </p>\r\n            {/* Display err */}\r\n            <div>\r\n              {appErr || serverErr ? (\r\n                <h2 className=\"text-red-500 text-center text-lg\">\r\n                  {serverErr} - {appErr}\r\n                </h2>\r\n              ) : null}\r\n            </div>\r\n          </p>\r\n        </div>\r\n        {/* Form */}\r\n        <form onSubmit={formik.handleSubmit} className=\"mt-8 space-y-6\">\r\n          <input type=\"hidden\" name=\"remember\" defaultValue=\"true\" />\r\n          <div className=\"rounded-md shadow-sm -space-y-px\">\r\n            <div>\r\n              <label htmlFor=\"email-address\" className=\"sr-only\">\r\n                Name\r\n              </label>\r\n              {/* Title */}\r\n              <input\r\n                value={formik.values.title}\r\n                onChange={formik.handleChange(\"title\")}\r\n                onBlur={formik.handleBlur(\"title\")}\r\n                type=\"text\"\r\n                autoComplete=\"text\"\r\n                className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 text-center focus:z-10 sm:text-sm\"\r\n                placeholder=\"New Category\"\r\n              />\r\n              <div className=\"text-red-400 mb-2\">\r\n                {formik.touched.title && formik.errors.title}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div>\r\n            <div>\r\n              {/* Submit */}\r\n              {loading ? (\r\n                <button\r\n                  disabled\r\n                  className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-gray-600 \"\r\n                >\r\n                  <span className=\"absolute left-0 inset-y-0 flex items-center pl-3\">\r\n                    <PlusCircleIcon\r\n                      className=\"h-5 w-5 text-yellow-500 group-hover:text-indigo-400\"\r\n                      aria-hidden=\"true\"\r\n                    />\r\n                  </span>\r\n                  Loading please wait...\r\n                </button>\r\n              ) : (\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n                >\r\n                  <span className=\"absolute left-0 inset-y-0 flex items-center pl-3\">\r\n                    <PlusCircleIcon\r\n                      className=\"h-5 w-5 text-yellow-500 group-hover:text-indigo-400\"\r\n                      aria-hidden=\"true\"\r\n                    />\r\n                  </span>\r\n                  Add new Category\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddNewCategory;\r\n",[],"C:\\Users\\Apoorva\\Desktop\\udemy\\blog-frontend\\src\\redux\\slices\\category\\categorySlice.js",[],[],"C:\\Users\\Apoorva\\Desktop\\udemy\\blog-frontend\\src\\components\\Categories\\CategoryList.js",[],[],"C:\\Users\\Apoorva\\Desktop\\udemy\\blog-frontend\\src\\components\\Navigation\\ProtectedRoutes\\PrivateProtectedRoute.js",[],[],"C:\\Users\\Apoorva\\Desktop\\udemy\\blog-frontend\\src\\components\\Posts\\CreatePost.js",["147","148"],[],"import { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport { createPostAction } from \"../../redux/slices/posts/postSlices\";\r\nimport {Navigate} from 'react-router-dom';\r\n//import { CategoryDropDown } from \"../Categories/CategoryDropDown\";\r\n\r\n\r\n\r\n//Form schema\r\nconst formSchema = Yup.object({\r\n  title: Yup.string().required(\"Title is required\"),\r\n  category: Yup.string().required(\"Category is required\"),\r\n  description: Yup.string().required(\"Description is required\"),\r\n\r\n});\r\n\r\n\r\nexport default function CreatePost() {\r\n  const dispatch = useDispatch();\r\n\r\n // //select store userData\r\n // const post=useSelector(state=>state.post);\r\n //const {isCreated, loading, appErr, serverErr}=post;\r\n \r\n  \r\n  //formik\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      title: \"\",\r\n      category:\"\",\r\n      description: \"\"\r\n     \r\n    },\r\n    onSubmit: values => {\r\n      console.log(values);\r\n      //dispath the action\r\n      dispatch(createPostAction(values));\r\n    },\r\n    validationSchema: formSchema,\r\n  });\r\n  \r\n  //redirect to th\r\n // if(isCreated) return <Navigate to=\"/posts\" />;\r\n  \r\n    return (\r\n      <>\r\n        <div className=\"min-h-screen bg-gray-900 flex flex-col justify-center py-12 sm:px-6 lg:px-8\">\r\n          <div className=\"sm:mx-auto sm:w-full sm:max-w-md\">\r\n            <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-300\">\r\n              Create Post\r\n            </h2>\r\n  \r\n            <p className=\"mt-2 text-center text-sm text-gray-600\">\r\n              <p className=\"font-medium text-green-600 hover:text-indigo-500\">\r\n                Share your ideas to the word. Your post must be free from\r\n                profanity\r\n              </p>\r\n            </p>\r\n          \r\n          </div>\r\n          <div className=\"mt-8 sm:mx-auto sm:w-full sm:max-w-md\">\r\n            <div className=\"bg-white py-8 px-4 shadow sm:rounded-lg sm:px-10\">\r\n              <form  onSubmit={formik.handleSubmit}className=\"space-y-6\">\r\n                <div>\r\n                  <label\r\n                    htmlFor=\"email\"\r\n                    className=\"block text-sm font-medium text-gray-700\"\r\n                  >\r\n                    Title\r\n                  </label>\r\n                  <div className=\"mt-1\">\r\n                    {/* Title */}\r\n                    <input \r\n                     value={formik.values.title}\r\n                     onChange={formik.handleChange(\"title\")}\r\n                     onBlur={formik.handleBlur(\"title\")}\r\n                      id=\"title\"\r\n                      name=\"title\"\r\n                      type=\"title\"\r\n                      autoComplete=\"title\"\r\n                      className=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n                    />\r\n                  </div>\r\n                  {/* Err msg */}\r\n                  <div className=\"text-red-500\">\r\n                    {formik.touched.title && formik.errors.title} \r\n                  </div>\r\n                </div>\r\n              {/* Category input goes here */} \r\n             {/* <CategoryDropDown></CategoryDropDown> */}\r\n             <label\r\n                    htmlFor=\"email\"\r\n                    className=\"block text-sm font-medium text-gray-700\"\r\n                  >\r\n                    Category\r\n                  </label>\r\n                  <div className=\"mt-1\">\r\n                    {/* Title */}\r\n                    <input \r\n                     value={formik.values.category}\r\n                     onChange={formik.handleChange(\"category\")}\r\n                     onBlur={formik.handleBlur(\"category\")}\r\n                      id=\"title\"\r\n                      name=\"title\"\r\n                      type=\"title\"\r\n                      autoComplete=\"title\"\r\n                      className=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n                    /><div className=\"text-red-500\">{formik.touched.category && formik.errors.category}</div>  \r\n                  </div>\r\n                <div>\r\n                  <label\r\n                    htmlFor=\"password\"\r\n                    className=\"block text-sm font-medium text-gray-700\"\r\n                  >\r\n                    Description\r\n                  </label>\r\n                  {/* Description */}\r\n                  <textarea\r\n                   value={formik.values.description}\r\n                   onChange={formik.handleChange(\"description\")}\r\n                   onBlur={formik.handleBlur(\"description\")}\r\n                    rows=\"5\"\r\n                    cols=\"10\"\r\n                    className=\"rounded-lg appearance-none block w-full py-3 px-3 text-base text-center leading-tight text-gray-600 bg-transparent focus:bg-transparent  border border-gray-200 focus:border-gray-500  focus:outline-none\"\r\n                    type=\"text\"\r\n                  ></textarea>\r\n                 \r\n                  <div className=\"text-red-500\"> {formik?.touched?.description}</div>\r\n                </div>\r\n                <div>\r\n                  {/* Submit btn */}\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n                  >\r\n                    Create\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n  ","C:\\Users\\Apoorva\\Desktop\\udemy\\blog-frontend\\src\\redux\\slices\\posts\\postSlices.js",["149"],[],"C:\\Users\\Apoorva\\Desktop\\udemy\\blog-frontend\\src\\components\\Categories\\CategoryDropDown.js",[],[],[],"C:\\Users\\Apoorva\\Desktop\\udemy\\blog-frontend\\src\\utils\\DateFormatter.js",["150"],[],"C:\\Users\\Apoorva\\Desktop\\udemy\\blog-frontend\\src\\components\\Posts\\PostsList.js",["151","152"],[],"C:\\Users\\Apoorva\\Desktop\\udemy\\blog-frontend\\src\\components\\Posts\\PostDetails.js",["153"],[],"C:\\Users\\Apoorva\\Desktop\\udemy\\blog-frontend\\src\\components\\Posts\\UpdatePost.js",["154","155"],[],"C:\\Users\\Apoorva\\Desktop\\udemy\\blog-frontend\\src\\components\\Comments\\AddComment.js",["156"],[],"C:\\Users\\Apoorva\\Desktop\\udemy\\blog-frontend\\src\\redux\\slices\\comments\\commentSlices.js",[],[],"C:\\Users\\Apoorva\\Desktop\\udemy\\blog-frontend\\src\\components\\Users\\Profile\\Profile.js",["157"],[],{"ruleId":"158","severity":1,"message":"159","line":8,"column":10,"nodeType":"160","messageId":"161","endLine":8,"endColumn":31},{"ruleId":"158","severity":1,"message":"162","line":2,"column":19,"nodeType":"160","messageId":"161","endLine":2,"endColumn":24},{"ruleId":"158","severity":1,"message":"162","line":7,"column":18,"nodeType":"160","messageId":"161","endLine":7,"endColumn":23},{"ruleId":"163","severity":1,"message":"164","line":26,"column":24,"nodeType":"165","messageId":"166","endLine":26,"endColumn":28},{"ruleId":"158","severity":1,"message":"167","line":5,"column":16,"nodeType":"160","messageId":"161","endLine":5,"endColumn":25},{"ruleId":"158","severity":1,"message":"168","line":9,"column":10,"nodeType":"160","messageId":"161","endLine":9,"endColumn":18},{"ruleId":"158","severity":1,"message":"169","line":30,"column":39,"nodeType":"160","messageId":"161","endLine":30,"endColumn":47},{"ruleId":"158","severity":1,"message":"170","line":3,"column":22,"nodeType":"160","messageId":"161","endLine":3,"endColumn":33},{"ruleId":"158","severity":1,"message":"171","line":5,"column":9,"nodeType":"160","messageId":"161","endLine":5,"endColumn":17},{"ruleId":"158","severity":1,"message":"172","line":1,"column":41,"nodeType":"160","messageId":"161","endLine":1,"endColumn":53},{"ruleId":"158","severity":1,"message":"173","line":3,"column":8,"nodeType":"160","messageId":"161","endLine":3,"endColumn":14},{"ruleId":"158","severity":1,"message":"174","line":3,"column":38,"nodeType":"160","messageId":"161","endLine":3,"endColumn":45},{"ruleId":"158","severity":1,"message":"175","line":17,"column":23,"nodeType":"160","messageId":"161","endLine":17,"endColumn":30},{"ruleId":"158","severity":1,"message":"176","line":4,"column":34,"nodeType":"160","messageId":"161","endLine":4,"endColumn":50},{"ruleId":"158","severity":1,"message":"171","line":3,"column":10,"nodeType":"160","messageId":"161","endLine":3,"endColumn":18},{"ruleId":"158","severity":1,"message":"177","line":33,"column":39,"nodeType":"160","messageId":"161","endLine":33,"endColumn":48},{"ruleId":"158","severity":1,"message":"170","line":5,"column":22,"nodeType":"160","messageId":"161","endLine":5,"endColumn":33},{"ruleId":"158","severity":1,"message":"174","line":11,"column":20,"nodeType":"160","messageId":"161","endLine":11,"endColumn":27},"no-unused-vars","'PrivateProtectedRoute' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'useParams' is defined but never used.","'PlusIcon' is defined but never used.","'category' is assigned a value but never used.","'useSelector' is defined but never used.","'Navigate' is defined but never used.","'createAction' is defined but never used.","'moment' is defined but never used.","'EyeIcon' is defined but never used.","'loading' is assigned a value but never used.","'updatePostAction' is defined but never used.","'isUpdated' is assigned a value but never used."]